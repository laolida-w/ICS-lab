                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f47805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6f802000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7e800000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #name:Wangy Yuhao
                            | #ID:2200017794
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6222                 | 	andq %rdx,%rdx		# len <= 0?
0x034: 71e000000000000000   | 	jle Done		# if so, goto Done:
                            | 
0x03d:                      | Loop:
0x03d: c0f2feffffffffffffff | 	iaddq -2,%rdx
0x047: 6222                 | 	andq %rdx,%rdx  # %rdx<0?
0x049: 72cc00000000000000   | 	jl test 
0x052: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src... bubble
0x05c: 50870800000000000000 | 	mrmovq 8(%rdi), %r8	# read val from src... bubble
0x066: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x070: 40860800000000000000 | 	rmmovq %r8, 8(%rsi)	# ...and store it to dst
0x07a: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x07c: 718f00000000000000   | 	jle Npos		# if so, goto Npos:
0x085: c0f00100000000000000 | 	iaddq 1, %rax		# else count++
0x08f:                      | Npos:	
0x08f: 6288                 | 	andq %r8, %r8		# val <= 0?
0x091: 71a400000000000000   | 	jle Npos1			# if so, goto Npos:
0x09a: c0f00100000000000000 | 	iaddq 1, %rax		# else count++
                            | 
0x0a4:                      | Npos1:
0x0a4: c0f71000000000000000 | 	iaddq 16, %rdi		# src+=2
0x0ae: c0f61000000000000000 | 	iaddq 16, %rsi		# dst+=2
0x0b8: 6222                 | 	andq %rdx,%rdx		# len > 0?
0x0ba: 763d00000000000000   | 	jg Loop			# if so, goto Loop:
0x0c3: 71e000000000000000   | 	jle Done 		#else return
                            | 
0x0cc:                      | test:
0x0cc: 50870000000000000000 | 	mrmovq (%rdi), %r8	# read val from src... bubble
0x0d6: 40860000000000000000 | 	rmmovq %r8, (%rsi)	# ...and store it to dst
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x0e0:                      | Done:
0x0e0: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x0e1:                      | End:
                            | #/* $end ncopy-ys */
0x0e1:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x0e8:                      | 	.align 8
0x0e8:                      | src:
0x0e8: 0100000000000000     | 	.quad 1
0x0f0: 0200000000000000     | 	.quad 2
0x0f8: fdffffffffffffff     | 	.quad -3
0x100: fcffffffffffffff     | 	.quad -4
0x108: 0500000000000000     | 	.quad 5
0x110: 0600000000000000     | 	.quad 6
0x118: f9ffffffffffffff     | 	.quad -7
0x120: f8ffffffffffffff     | 	.quad -8
0x128: f7ffffffffffffff     | 	.quad -9
0x130: f6ffffffffffffff     | 	.quad -10
0x138: f5ffffffffffffff     | 	.quad -11
0x140: 0c00000000000000     | 	.quad 12
0x148: f3ffffffffffffff     | 	.quad -13
0x150: f2ffffffffffffff     | 	.quad -14
0x158: 0f00000000000000     | 	.quad 15
0x160: 1000000000000000     | 	.quad 16
0x168: efffffffffffffff     | 	.quad -17
0x170: eeffffffffffffff     | 	.quad -18
0x178: 1300000000000000     | 	.quad 19
0x180: 1400000000000000     | 	.quad 20
0x188: ebffffffffffffff     | 	.quad -21
0x190: 1600000000000000     | 	.quad 22
0x198: 1700000000000000     | 	.quad 23
0x1a0: e8ffffffffffffff     | 	.quad -24
0x1a8: 1900000000000000     | 	.quad 25
0x1b0: e6ffffffffffffff     | 	.quad -26
0x1b8: e5ffffffffffffff     | 	.quad -27
0x1c0: e4ffffffffffffff     | 	.quad -28
0x1c8: 1d00000000000000     | 	.quad 29
0x1d0: e2ffffffffffffff     | 	.quad -30
0x1d8: e1ffffffffffffff     | 	.quad -31
0x1e0: 2000000000000000     | 	.quad 32
0x1e8: 2100000000000000     | 	.quad 33
0x1f0: 2200000000000000     | 	.quad 34
0x1f8: ddffffffffffffff     | 	.quad -35
0x200: 2400000000000000     | 	.quad 36
0x208: dbffffffffffffff     | 	.quad -37
0x210: daffffffffffffff     | 	.quad -38
0x218: d9ffffffffffffff     | 	.quad -39
0x220: 2800000000000000     | 	.quad 40
0x228: d7ffffffffffffff     | 	.quad -41
0x230: 2a00000000000000     | 	.quad 42
0x238: d5ffffffffffffff     | 	.quad -43
0x240: 2c00000000000000     | 	.quad 44
0x248: 2d00000000000000     | 	.quad 45
0x250: 2e00000000000000     | 	.quad 46
0x258: 2f00000000000000     | 	.quad 47
0x260: d0ffffffffffffff     | 	.quad -48
0x268: 3100000000000000     | 	.quad 49
0x270: ceffffffffffffff     | 	.quad -50
0x278: cdffffffffffffff     | 	.quad -51
0x280: ccffffffffffffff     | 	.quad -52
0x288: 3500000000000000     | 	.quad 53
0x290: caffffffffffffff     | 	.quad -54
0x298: 3700000000000000     | 	.quad 55
0x2a0: c8ffffffffffffff     | 	.quad -56
0x2a8: c7ffffffffffffff     | 	.quad -57
0x2b0: 3a00000000000000     | 	.quad 58
0x2b8: 3b00000000000000     | 	.quad 59
0x2c0: c4ffffffffffffff     | 	.quad -60
0x2c8: 3d00000000000000     | 	.quad 61
0x2d0: 3e00000000000000     | 	.quad 62
0x2d8: 3f00000000000000     | 	.quad 63
0x2e0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x2f0:                      | 	.align 16
0x2f0:                      | Predest:
0x2f0: fadebc0000000000     | 	.quad 0xbcdefa
0x2f8:                      | dest:
0x2f8: abefcd0000000000     | 	.quad 0xcdefab
0x300: abefcd0000000000     | 	.quad 0xcdefab
0x308: abefcd0000000000     | 	.quad 0xcdefab
0x310: abefcd0000000000     | 	.quad 0xcdefab
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0:                      | Postdest:
0x4f0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x4f8:                      | .align 8
                            | # Run time stack
0x4f8: 0000000000000000     | 	.quad 0
0x500: 0000000000000000     | 	.quad 0
0x508: 0000000000000000     | 	.quad 0
0x510: 0000000000000000     | 	.quad 0
0x518: 0000000000000000     | 	.quad 0
0x520: 0000000000000000     | 	.quad 0
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
0x558: 0000000000000000     | 	.quad 0
0x560: 0000000000000000     | 	.quad 0
0x568: 0000000000000000     | 	.quad 0
0x570: 0000000000000000     | 	.quad 0
                            | 
0x578:                      | Stack:
