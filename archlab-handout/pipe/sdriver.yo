                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4c001000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f61801000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7e800000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #name:Wangy Yuhao
                            | #ID:2200017794
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6222                 | 	andq %rdx,%rdx		# len <= 0?
0x034: 71e000000000000000   | 	jle Done		# if so, goto Done:
                            | 
0x03d:                      | Loop:
0x03d: c0f2feffffffffffffff | 	iaddq -2,%rdx
0x047: 6222                 | 	andq %rdx,%rdx  # %rdx<0?
0x049: 72cc00000000000000   | 	jl test 
0x052: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src... bubble
0x05c: 50870800000000000000 | 	mrmovq 8(%rdi), %r8	# read val from src... bubble
0x066: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x070: 40860800000000000000 | 	rmmovq %r8, 8(%rsi)	# ...and store it to dst
0x07a: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x07c: 718f00000000000000   | 	jle Npos		# if so, goto Npos:
0x085: c0f00100000000000000 | 	iaddq 1, %rax		# else count++
0x08f:                      | Npos:	
0x08f: 6288                 | 	andq %r8, %r8		# val <= 0?
0x091: 71a400000000000000   | 	jle Npos1			# if so, goto Npos:
0x09a: c0f00100000000000000 | 	iaddq 1, %rax		# else count++
                            | 
0x0a4:                      | Npos1:
0x0a4: c0f71000000000000000 | 	iaddq 16, %rdi		# src+=2
0x0ae: c0f61000000000000000 | 	iaddq 16, %rsi		# dst+=2
0x0b8: 6222                 | 	andq %rdx,%rdx		# len > 0?
0x0ba: 763d00000000000000   | 	jg Loop			# if so, goto Loop:
0x0c3: 71e000000000000000   | 	jle Done 		#else return
                            | 
0x0cc:                      | test:
0x0cc: 50870000000000000000 | 	mrmovq (%rdi), %r8	# read val from src... bubble
0x0d6: 40860000000000000000 | 	rmmovq %r8, (%rsi)	# ...and store it to dst
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x0e0:                      | Done:
0x0e0: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x0e1:                      | End:
                            | #/* $end ncopy-ys */
0x0e1:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x0e8:                      | 	.align 8
0x0e8:                      | src:
0x0e8: ffffffffffffffff     | 	.quad -1
0x0f0: feffffffffffffff     | 	.quad -2
0x0f8: 0300000000000000     | 	.quad 3
0x100: 0400000000000000     | 	.quad 4
0x108: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x110:                      | 	.align 16
0x110:                      | Predest:
0x110: fadebc0000000000     | 	.quad 0xbcdefa
0x118:                      | dest:
0x118: abefcd0000000000     | 	.quad 0xcdefab
0x120: abefcd0000000000     | 	.quad 0xcdefab
0x128: abefcd0000000000     | 	.quad 0xcdefab
0x130: abefcd0000000000     | 	.quad 0xcdefab
0x138:                      | Postdest:
0x138: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x140:                      | .align 8
                            | # Run time stack
0x140: 0000000000000000     | 	.quad 0
0x148: 0000000000000000     | 	.quad 0
0x150: 0000000000000000     | 	.quad 0
0x158: 0000000000000000     | 	.quad 0
0x160: 0000000000000000     | 	.quad 0
0x168: 0000000000000000     | 	.quad 0
0x170: 0000000000000000     | 	.quad 0
0x178: 0000000000000000     | 	.quad 0
0x180: 0000000000000000     | 	.quad 0
0x188: 0000000000000000     | 	.quad 0
0x190: 0000000000000000     | 	.quad 0
0x198: 0000000000000000     | 	.quad 0
0x1a0: 0000000000000000     | 	.quad 0
0x1a8: 0000000000000000     | 	.quad 0
0x1b0: 0000000000000000     | 	.quad 0
0x1b8: 0000000000000000     | 	.quad 0
                            | 
0x1c0:                      | Stack:
