#######################################################################
# Test for copying block of size 4;
#######################################################################
	.pos 0
main:	irmovq Stack, %rsp  	# Set up stack pointer

	# Set up arguments for copy function and then invoke it
	irmovq $4, %rdx		# src and dst have 4 elements
	irmovq dest, %rsi	# dst array
	irmovq src, %rdi	# src array
	call ncopy		 
	halt			# should halt with num nonzeros in %rax
StartFun:
#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#name:Wangy Yuhao
#ID:2200017794
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	andq %rdx,%rdx		# len <= 0?
	jle Done		# if so, goto Done:

Loop:
	iaddq -2,%rdx
	andq %rdx,%rdx  # %rdx<0?
	jl test 
	mrmovq (%rdi), %r10	# read val from src... bubble
	mrmovq 8(%rdi), %r8	# read val from src... bubble
	rmmovq %r10, (%rsi)	# ...and store it to dst
	rmmovq %r8, 8(%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos		# if so, goto Npos:
	iaddq 1, %rax		# else count++
Npos:	
	andq %r8, %r8		# val <= 0?
	jle Npos1			# if so, goto Npos:
	iaddq 1, %rax		# else count++

Npos1:
	iaddq 16, %rdi		# src+=2
	iaddq 16, %rsi		# dst+=2
	andq %rdx,%rdx		# len > 0?
	jg Loop			# if so, goto Loop:
	jle Done 		#else return

test:
	mrmovq (%rdi), %r8	# read val from src... bubble
	rmmovq %r8, (%rsi)	# ...and store it to dst

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
EndFun:

###############################
# Source and destination blocks 
###############################
	.align 8
src:
	.quad -1
	.quad -2
	.quad 3
	.quad 4
	.quad 0xbcdefa # This shouldn't get moved

	.align 16
Predest:
	.quad 0xbcdefa
dest:
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
Postdest:
	.quad 0xdefabc

.align 8
# Run time stack
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0

Stack:
