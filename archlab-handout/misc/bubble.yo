                            | #name:wangyuhao
                            | #ID:2200017794
                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
0x018:                      | .align 8
0x018:                      | Array:
0x018: ca0b000000000000     |     .quad 0xbca
0x020: ba0c000000000000     |     .quad 0xcba
0x028: cb0a000000000000     |     .quad 0xacb
0x030: ab0c000000000000     |     .quad 0xcab
0x038: bc0a000000000000     |     .quad 0xabc
0x040: ac0b000000000000     |     .quad 0xbac
                            | 
0x048:                      | main:	
0x048: 30f71800000000000000 | 	irmovq Array,%rdi
0x052: 30f60600000000000000 |     irmovq $6,%rsi
0x05c: 806600000000000000   | 	call bubble_list		# bubble_list(Array,6)  
0x065: 90                   | 	ret
                            | 
                            | # long bubble_list(Array,6)
                            | 
0x066:                      | bubble_list:	
0x066: 2079                 |     rrmovq %rdi,%r9     #*data
0x068: 30f00800000000000000 |     irmovq $8,%rax      #constant 8
0x072: 30fb0100000000000000 |     irmovq $1,%r11      #constant 1
                            | 
0x07c:                      | figure_last:
0x07c: 61b6                 |     subq %r11,%rsi
0x07e: 6266                 |     andq %rsi,%rsi      
0x080: 739400000000000000   |     je loop1
0x089: 6009                 |     addq  %rax,%r9      #r9=last
0x08b: 707c00000000000000   |     jmp  figure_last
                            | 
0x094:                      | loop1:
0x094: 207c                 |     rrmovq %rdi,%r12
0x096: 619c                 |     subq %r9,%r12       #last =data,end loop
0x098: 730c01000000000000   |     je test
0x0a1: 2078                 |     rrmovq %rdi,%r8     #i=data
0x0a3: 70b700000000000000   |     jmp loop2           #else loop2
0x0ac: 6109                 |     subq %rax,%r9       
0x0ae: 709400000000000000   |     jmp loop1
                            |    
0x0b7:                      | loop2: 
0x0b7: 209d                 |     rrmovq %r9,%r13     
0x0b9: 618d                 |     subq %r8,%r13       #last-i
0x0bb: 739400000000000000   |     je loop1            #when i=last goto loop1
0x0c4: 50380800000000000000 |     mrmovq 8(%r8),%rbx  #*(i+1)
0x0ce: 50e80000000000000000 |     mrmovq (%r8),%r14
0x0d8: 61e3                 |     subq %r14,%rbx      #
0x0da: 760101000000000000   |     jg test1            #if *(i + 1) >*i
0x0e3: 50180800000000000000 |     mrmovq 8(%r8),%rcx
0x0ed: 40e80800000000000000 |     rmmovq %r14,8(%r8)   
0x0f7: 40180000000000000000 |     rmmovq %rcx,(%r8)
                            | 
0x101:                      | test1:
0x101: 6008                 |     addq %rax,%r8
0x103: 70b700000000000000   |     jmp loop2
                            | 
0x10c:                      | test:
                            |     
0x10c: 90                   | 	ret                  # Return
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:
